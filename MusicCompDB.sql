-- Drop and create schema
DROP SCHEMA IF EXISTS MusicCompDB CASCADE;
CREATE SCHEMA MusicCompDB;
SET SEARCH_PATH TO MusicCompDB;

-- AGEGROUP table
CREATE TABLE AGEGROUP (
  AGE_GROUPID INTEGER NOT NULL,
  AGE_GROUP_DESC VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (AGE_GROUPID)
);

-- COUNTY table
CREATE TABLE COUNTY (
  COUNTYID INTEGER NOT NULL,
  COUNTYNAME VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (COUNTYID)
);

-- Edition table
CREATE TABLE Edition (
  EDYEAR INTEGER NOT NULL,  -- Year stored as INTEGER
  EDPRESENTER VARCHAR(255) NOT NULL,
  PRIMARY KEY (EDYEAR)
);

-- VIEWERCATEGORY table
CREATE TABLE VIEWERCATEGORY (
  CATID INTEGER NOT NULL,
  CATNAME VARCHAR(50) DEFAULT NULL CHECK (CATNAME IN ('Jury', 'Audience')),
  PRIMARY KEY (CATID)
);

-- PARTICIPANTS table
CREATE TABLE PARTICIPANTS (
  PARTNAME VARCHAR(255) NOT NULL,
  COUNTYID INTEGER DEFAULT NULL,
  PRIMARY KEY (PARTNAME),
  CONSTRAINT fk_participants_county FOREIGN KEY (COUNTYID) REFERENCES COUNTY (COUNTYID)
);

-- VIEWERS table
CREATE TABLE VIEWERS (
  VIEWERID INTEGER NOT NULL,
  AGE_GROUP INTEGER DEFAULT NULL,
  COUNTY INTEGER DEFAULT NULL,
  CATEGORY INTEGER DEFAULT 1,
  PRIMARY KEY (VIEWERID),
  CONSTRAINT fk_viewers_county FOREIGN KEY (COUNTY) REFERENCES COUNTY (COUNTYID),
  CONSTRAINT fk_viewers_age_group FOREIGN KEY (AGE_GROUP) REFERENCES AGEGROUP (AGE_GROUPID),
  CONSTRAINT fk_viewers_category FOREIGN KEY (CATEGORY) REFERENCES VIEWERCATEGORY (CATID)
);


-- VOTES table
CREATE TABLE VOTES (
  VIEWERID INTEGER NOT NULL,
  VOTEDATE TIMESTAMP NOT NULL,
  VOTEMODE VARCHAR(10) DEFAULT NULL CHECK (VOTEMODE IN ('Phone', 'Facebook', 'Instagram', 'Web')),
  VOTE INTEGER DEFAULT NULL CHECK (VOTE > 0 AND VOTE < 6),
  EDITION_YEAR INTEGER DEFAULT NULL,
  PARTNAME VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (VIEWERID, VOTEDATE, PARTNAME),
  CONSTRAINT fk_votes_viewer FOREIGN KEY (VIEWERID) REFERENCES VIEWERS (VIEWERID),
  CONSTRAINT fk_votes_edition FOREIGN KEY (EDITION_YEAR) REFERENCES Edition (EDYEAR),
  CONSTRAINT fk_votes_participant FOREIGN KEY (PARTNAME) REFERENCES PARTICIPANTS (PARTNAME)
);

-- Create indexes
CREATE INDEX idx_votes_edition_year ON VOTES (EDITION_YEAR);
CREATE INDEX idx_votes_partname ON VOTES (PARTNAME);
